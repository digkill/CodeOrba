import { useEffect, useRef, useState } from "react";
import { WebContainer } from '@webcontainer/api';
import files from '../utils/files-template'; // –º—ã –ø–æ–¥–∫–ª—é—á–∏–º —ç—Ç–æ –Ω–∏–∂–µ üëá

export default function Sandbox() {
  const iframeRef = useRef(null);
  const webcontainerRef = useRef(null);
  const [previewUrl, setPreviewUrl] = useState(null);
  const [status, setStatus] = useState("–ó–∞–≥—Ä—É–∑–∫–∞ WebContainer...");

  useEffect(() => {
    (async () => {
      setStatus("üöÄ –ó–∞–≥—Ä—É–∂–∞–µ–º WebContainer...");
      const webcontainer = await WebContainer.boot();
      webcontainerRef.current = webcontainer;

      setStatus("üì¶ –ú–æ–Ω—Ç–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã –ø—Ä–æ–µ–∫—Ç–∞...");
      await webcontainer.mount(files);

      setStatus("üì• –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏...");
      const install = await webcontainer.spawn('npm', ['install']);

      install.output.pipeTo(new WritableStream({
        write(data) {
          const text = new TextDecoder().decode(data);
          console.log('[npm install]', text);
        }
      }));

      await install.exit;

      setStatus("üîÑ –ó–∞–ø—É—Å–∫–∞–µ–º Vite —Å–µ—Ä–≤–µ—Ä...");
      const server = await webcontainer.spawn('npm', ['run', 'dev']);

      server.output.pipeTo(new WritableStream({
        write(data) {
          const text = new TextDecoder().decode(data);
          console.log('[vite]', text);

          const match = text.match(/http:\/\/localhost:\d+/);
          if (match) {
            const url = match[0].replace("localhost", webcontainer.url.hostname);
            console.log('[Vite URL]', url);
            setPreviewUrl(url);
            setStatus("‚úÖ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω!");
          }
        }
      }));
    })();
  }, []);

  return (
    <div className="h-screen flex flex-col">
      <header className="bg-gray-900 text-white text-xl p-4">
        WebContainer Sandbox üõ∏
      </header>

      {status && (
        <div className="text-white bg-gray-800 text-sm px-4 py-2">{status}</div>
      )}

      <main className="flex-1 bg-black">
        {previewUrl ? (
          <iframe
            ref={iframeRef}
            src={previewUrl}
            className="w-full h-full"
            title="WebContainer Preview"
            sandbox="allow-scripts allow-same-origin"
          />
        ) : (
          <div className="text-white flex items-center justify-center h-full">
            üß† –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ä–µ–¥—ã...
          </div>
        )}
      </main>
    </div>
  );
}
